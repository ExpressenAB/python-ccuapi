{"name":"python-ccuapi","tagline":"Python wrapper around Akamai ccuapi","body":"Hat tip to https://github.com/beathan/django-akamai for inspiring the code.\r\n\r\n## Credentials\r\n\r\nCredentials can be provided in 1 of 3 ways:\r\n\r\n1. AKAMAI_USERNAME and AKAMAI_PASSWORD environment variables.\r\n2. A `.akamai` config file in the user's home directory. [(Sample config included as .akamai.sample)](https://github.com/dryan/python-ccuapi/blob/master/.akamai.sample)\r\n3. Passing `username` and `password` kwargs to ccuapi.purge.PurgeRequest on initialization.\r\n\r\n## Email Notifications\r\n\r\nOne or more comma-separated email addresses may be set to receive notifications when a content purge is complete. These are provided in 1 of 3 ways:\r\n\r\n1. AKAMAI_NOTIFY_EMAIL environment variable.\r\n2. In the `.akamai` config file.\r\n3. Passing `email` kwarg to ccuapi.purge.PurgeRequest on initialization.\r\n\r\n## Usage\r\n\r\n\tfrom ccuapi.purge import PurgeRequest\r\n\tpurger\t= \tPurgeRequest()\r\n\tpurger.add('http://domain.com') # this can be a string, list of strings, Django QuerySet or Django object with the `get_absolute_url` method defined\r\n\tresults\t= \tpurger.purge() # returns a list of responses from Akamai, 1 per 100 URLs sent\r\n\t\r\n## Command Line Usage\r\n\r\n\tccu_purge http://domain.com\r\n\t\r\nRun `ccu_purge -h` for additional options.\r\n","google":"UA-3625251-12","note":"Don't delete this file! It's used internally to help with page regeneration."}